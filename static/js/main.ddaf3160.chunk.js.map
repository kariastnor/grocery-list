{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","listItem","id","title","key","type","onClick","Alert","props","msg","handleAlert","useEffect","timeout","setTimeout","clearInterval","App","useState","name","setName","storedList","localStorage","getItem","JSON","parse","getLocalStorage","list","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","setItem","stringify","onSubmit","event","preventDefault","prevList","newItem","Date","getTime","toString","value","onChange","target","autoFocus","length","filter","item","editedItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddaf3160.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nconst List = ({ items, removeItem, editItem }) => {\r\n  return (\r\n    <div className=\"grocery-list\">\r\n      {items.map((listItem) => {\r\n        const { id, title } = listItem;\r\n        return (\r\n          <article key={id} className=\"grocery-item\">\r\n            <p className=\"title\">{title}</p>\r\n            <div className=\"btn-container\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"edit-btn\"\r\n                onClick={() => editItem(id)}\r\n              >\r\n                <FaEdit />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"delete-btn\"\r\n                onClick={() => removeItem(id)}\r\n              >\r\n                <FaTrash />\r\n              </button>\r\n            </div>\r\n          </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Alert = (props) => {\r\n  const { msg, type, handleAlert } = props;\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      handleAlert();\r\n    }, 3000);\r\n    return () => clearInterval(timeout);\r\n    // We need to invoke the useEffect each time there is a change to the list\r\n  }, [handleAlert]);\r\n\r\n  return <p className={`alert alert-${type}`}>{msg}</p>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport List from \"./List\";\r\nimport Alert from \"./Alert\";\r\n\r\n// First check if there's a local list stored on computer\r\nfunction getLocalStorage() {\r\n  let storedList = localStorage.getItem(\"groc_list_22_10z\");\r\n  if (storedList) {\r\n    // Need to convert back from string to object\r\n    return JSON.parse(storedList);\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [list, setList] = useState(getLocalStorage());\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editID, setEditID] = useState(null);\r\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!name) {\r\n      handleAlert(true, \"Please enter a value\", \"danger\");\r\n    } else if (name && isEditing) {\r\n      setList((prevList) => {\r\n        return prevList.map((listItem) => {\r\n          if (listItem.id === editID) {\r\n            return { ...listItem, title: name };\r\n          } else {\r\n            return listItem;\r\n          }\r\n        });\r\n      });\r\n      setName(\"\");\r\n      setIsEditing(false);\r\n      setEditID(null);\r\n      handleAlert(true, \"Item edited\", \"success\");\r\n    } else {\r\n      handleAlert(true, \"Item added to grocery list\", \"success\");\r\n      const newItem = { id: new Date().getTime().toString(), title: name };\r\n      setList((prevList) => [...prevList, newItem]);\r\n      setName(\"\");\r\n    }\r\n  }\r\n\r\n  // Set up default values in the inputs, which are used if nothing is entered as inputs\r\n  function handleAlert(show = false, msg = \"\", type = \"\") {\r\n    setAlert({ show, msg, type });\r\n  }\r\n\r\n  function clearList() {\r\n    handleAlert(true, \"Empty list\", \"danger\");\r\n    setList([]);\r\n  }\r\n\r\n  function removeItem(id) {\r\n    handleAlert(true, \"Item removed\", \"danger\");\r\n    setList((prevList) => {\r\n      return prevList.filter((item) => item.id !== id);\r\n    });\r\n  }\r\n\r\n  function editItem(id) {\r\n    const editedItem = list.find((item) => item.id === id);\r\n    setIsEditing(true);\r\n    setEditID(id);\r\n    setName(editedItem.title);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Save all list changes to local storage. Need to be in string format.\r\n    // Should use unique local key name since it can cause issues if other websites use the same name\r\n    localStorage.setItem(\"groc_list_22_10z\", JSON.stringify(list));\r\n  }, [list]);\r\n\r\n  return (\r\n    <section className=\"section-center\">\r\n      <div className=\"alert-box\">\r\n        {alert.show && <Alert {...alert} handleAlert={handleAlert} />}\r\n      </div>\r\n      <form className=\"grocery-form\" onSubmit={handleSubmit}>\r\n        <h3>Grocery list</h3>\r\n        <div className=\"form-control\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"grocery\"\r\n            // placeholder=\"e.g. eggs\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n            autoFocus\r\n          />\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            {isEditing ? \"Save\" : \"Add\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {list.length > 0 && (\r\n        <div className=\"grocery-container\">\r\n          <List items={list} removeItem={removeItem} editItem={editItem} />\r\n          <button className=\"clear-btn\" onClick={clearList}>\r\n            Clear items\r\n          </button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}